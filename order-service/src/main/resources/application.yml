server:
  port: 8080

app:
  redis:
    enabled: true

spring:
  application:
    name: order-service
  profiles:
    active: local
  datasource:
    url: jdbc:mysql://localhost:3306/order_db
    username: ruang
    password: ruang
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      max-lifetime: 250000
      connection-timeout: 5000
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka.ecommerce-infra.svc.cluster.local:9092}
    producer:
      key-serializer: ${SPRING_KAFKA_PRODUCER_KEY_SERIALIZER:org.apache.kafka.common.serialization.StringSerializer}
      value-serializer: ${SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER:org.springframework.kafka.support.serializer.JsonSerializer}
      acks: 1
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: ${SPRING_KAFKA_CONSUMER_GROUP_ID:order-consumer-group}
      key-deserializer: ${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
      value-deserializer: ${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.springframework.kafka.support.serializer.ErrorHandlingDeserializer}
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages: ${SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES:com.hhplus.ecommerce.common.event}
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000

services:
  balance:
    url: ${SERVICES_BALANCE_URL:http://localhost:8081}
  coupon:
    url: ${SERVICES_COUPON_URL:http://localhost:8082}
  product:
    url: ${SERVICES_PRODUCT_URL:http://localhost:8083}
  user:
    url: ${SERVICES_USER_URL:http://localhost:8084}